apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  annotations:
    prometheus.io/scrape: "true"
spec:
#  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        sidecar.istio.io/inject: "true"
        version: v1.76.0
    spec:
      containers:
      - name: nginx
        image: harbor.k-tech.cloud/msa/nginx:4
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: docker-config-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'  # 필요에 따라 수정
    prometheus.io/port: '80'    # 서비스의 메트릭 포트 번호
spec:
  selector:
    app: nginx
    sidecar.istio.io/inject: "true"
  ports:
    - port: 80
      name: http-nginx
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: nginx-gateway
  annotations:
    kubernetes.io/ingress.class: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - www.k-tech.cloud
    tls:
      mode: SIMPLE
      credentialName: nginx-secret
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: nginx-virtualservice
spec:
  gateways:
  - nginx-gateway
  hosts:
  - www.k-tech.cloud
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: nginx-service
        port:
          number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 10
